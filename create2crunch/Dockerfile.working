FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y \
    ca-certificates \
    gnupg \
    curl \
    build-essential \
    pkg-config \
    libssl-dev \
    git \
    ocl-icd-opencl-dev \
    opencl-headers \
    clinfo \
    && rm -rf /var/lib/apt/lists/*

# Ensure OpenCL ICD loader can find the NVIDIA vendor library when GPUs are exposed
RUN mkdir -p /etc/OpenCL/vendors \
    && echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd

# Hint to NVIDIA Container Toolkit (harmless if not present)
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# Install Node.js 18.x
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get update && apt-get install -y nodejs && \
    rm -rf /var/lib/apt/lists/*

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

WORKDIR /home

# Copy package manifests and install production deps (better layer caching)
COPY package*.json ./
RUN npm ci --only=production

# Copy source files
COPY . .

# Build the Rust binary
RUN cargo build --release

# Set environment variables
ENV DEVICE_ID=0
ENV MINER_PATH=/home/target/release/fourfourfourfour
ENV REDIS_HOST=localhost
ENV REDIS_PORT=6379

# Copy entrypoint and make executable
COPY entrypoint.sh /home/entrypoint.sh
RUN chmod +x /home/entrypoint.sh

# Use JSON-form ENTRYPOINT to avoid signal handling issues
ENTRYPOINT ["bash", "/home/entrypoint.sh"]
